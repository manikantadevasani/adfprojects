{
	"name": "dataflow_active_bench_benchTeam",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_storagelake01_source_mutiplefiles",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "ds_storage03_source",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_storage03_sources01",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          deptno as integer,",
				"          dname as string,",
				"          dloc as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          EMPNO as integer,",
				"          ENAME as string,",
				"          JOB as string,",
				"          MGR as integer,",
				"          HIREDATE as date,",
				"          SAL as integer,",
				"          COMM as integer,",
				"          DEPTNO as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1, source2 join(source1@deptno == source2@DEPTNO,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          EMPNO,",
				"          ENAME,",
				"          JOB,",
				"          MGR,",
				"          HIREDATE,",
				"          SAL,",
				"          COMM,",
				"          EMPDEPTNO = source2@DEPTNO,",
				"          deptno = source1@deptno,",
				"          dname,",
				"          dloc",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"derivedColumn2 derive(status = iif(not(isNull(deptno))&&not(isNull(EMPDEPTNO)),\"Active\", iif(isNull(EMPDEPTNO),\"BenchTeam\",\"BenchProject\"))) ~> derivedColumn1",
				"derivedColumn1 aggregate(groupBy(status),",
				"     {maximum sal} = max(SAL)) ~> aggregate1",
				"select1 derive(SAL = iif(isNull(SAL),0,SAL)) ~> derivedColumn2",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['active_bench_Team_project.txt'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}